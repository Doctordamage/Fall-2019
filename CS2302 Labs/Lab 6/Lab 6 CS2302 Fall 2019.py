import time
from GraphAdjacencyMatrix import *
from KruskalAlgorithm import *
from TopologicalSort import *

print('This is Kruskal Algorithm.')
g1 = GraphAM(vertices=10, directed=False, weighted=True)
g1.insert_edge(0,1,4)
g1.insert_edge(0,4,3)
g1.insert_edge(4,1,2)
g1.insert_edge(1,2,4)
g1.insert_edge(1,5,5)
g1.insert_edge(4,7,1)
g1.insert_edge(4,5,12)
g1.insert_edge(2,5,6)
g1.insert_edge(5,7,21)
g1.insert_edge(7,8,14)
g1.insert_edge(5,8,11)
g1.insert_edge(5,6,17)
g1.insert_edge(2,6,9)
g1.insert_edge(2,3,8)
g1.insert_edge(3,6,13)
g1.insert_edge(6,8,10)
g1.insert_edge(8,9,16)
g1.insert_edge(9,6,15)
g1.insert_edge(9,3,20)

start = time.time()
print(kruskal(g1).am)
end = time.time()
print('Running time:')
print(end - start)
print('seconds.')
print()

print('This is Topological Sort.')
g = GraphAM(9, directed=True, weighted=False)
g.insert_edge(0, 1)
g.insert_edge(4, 0)
g.insert_edge(4, 1)
g.insert_edge(7, 4)
g.insert_edge(5, 4)
g.insert_edge(5, 7)
g.insert_edge(8, 7)
g.insert_edge(8, 5)
g.insert_edge(6, 5)
g.insert_edge(5, 1)
g.insert_edge(5, 2)
g.insert_edge(2, 1)
g.insert_edge(2, 3)
g.insert_edge(6, 2)
g.insert_edge(6, 3)
g.insert_edge(6, 8)

start1 = time.time()
print(topologicalSort(g))
end1 = time.time()
print('Running time:')
print(end1 - start1)
print('seconds.')

